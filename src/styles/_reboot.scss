@use "variables";
@use "rfs";

*,
*::before,
*::after {
  box-sizing: border-box;
}

:root {
  @media (prefers-reduced-motion: no-preference) {
    scroll-behavior: smooth;
  }
}

body {
  margin: 0;
  font-family: var(--body-font-family);
  @include rfs.font-size(var(--body-font-size));
  font-weight: var(--body-font-weight);
  line-height: var(--body-line-height);
  color: var(--body-color);
  text-align: var(--body-text-align);
  background-color: var(--body-bg);
  -webkit-text-size-adjust: 100%;
  -webkit-tap-highlight-color: rgba(variables.$dark, 0);
}

%heading {
  margin-top: 0;
  margin-bottom: variables.$headings-margin-bottom;
  font-family: variables.$headings-font-family;
  font-style: variables.$headings-font-style;
  color: var(--heading-color);
}

h1, .h1 {
  @extend %heading;
  font-weight: variables.$font-weight-black;
  line-height: variables.$line-height-1;
  @include rfs.font-size(variables.$h1-font-size);
}

h2, .h2 {
  @extend %heading;
  font-weight: variables.$font-weight-semibold;
  line-height: variables.$headings-line-height;
  @include rfs.font-size(variables.$h2-font-size);
}

h3, .h3 {
  @extend %heading;
  font-weight: variables.$font-weight-normal;
  line-height: variables.$headings-line-height;
  @include rfs.font-size(variables.$h3-font-size);
}

h4, .h4 {
  @extend %heading;
  font-weight: variables.$font-weight-semibold;
  line-height: variables.$line-height-sm;
  @include rfs.font-size(variables.$h4-font-size);
}

p {
  margin-top: 0;
  margin-bottom: variables.$paragraph-margin-bottom;
  @include rfs.font-size(variables.$font-size-lg);
  font-weight: variables.$font-weight-medium;
  line-height: variables.$line-height-lg;
}

b {
  font-weight: variables.$font-weight-bolder;
}

strong {
  font-weight: variables.$font-weight-black;
}

small, .small {
  @include rfs.font-size(variables.$small-font-size);
  line-height: variables.$line-height-md;
  font-weight: variables.$font-weight-normal;
}

.small {
  @media (max-width: 767.98px) {
    @include rfs.font-size(variables.$small-font-size-sm);
    line-height: 1.5rem;
  }
}

a {
  color: rgba(var(--link-color-rgb), var(--link-opacity, 1));
  text-decoration: variables.$link-decoration;

  &:hover {
    --link-color-rgb: var(--link-hover-color-rgb);
    text-decoration: variables.$link-hover-decoration;
  }
}

a:not([href]):not([class]) {
  &,
  &:hover {
    color: inherit;
    text-decoration: none;
  }
}

img,
svg {
  vertical-align: middle;
}

label {
  display: inline-block;
}

button {
  border-radius: 0;
}

button:focus:not(:focus-visible) {
  outline: 0;
}

input,
button,
textarea {
  margin: 0;
  font-family: inherit;
  @include rfs.font-size(inherit);
  line-height: inherit;
}

button {
  text-transform: none;
}

[role="button"] {
  cursor: pointer;
}

button,
[type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;

  &:not(:disabled) {
    cursor: pointer;
  }
}

::-moz-focus-inner {
  padding: 0;
  border-style: none;
}

textarea {
  resize: vertical;
}

::-webkit-inner-spin-button {
  height: auto;
}

[type="search"] {
  -webkit-appearance: textfield;
  outline-offset: -2px;
}

::-webkit-search-decoration {
  -webkit-appearance: none;
}

::-webkit-color-swatch-wrapper {
  padding: 0;
}

::file-selector-button {
  font: inherit;
  -webkit-appearance: button;
}

[hidden] {
  display: none !important;
}
