@use "sass:meta";
@use "sass:string";
@use "sass:list";
@use "sass:map";
@use "sass:math";
@use "sass:color";

///////////////// Functions /////////////////
@mixin _assert-ascending($map, $map-name) {
  $prev-key: null;
  $prev-num: null;
  @each $key, $num in $map {
    @if $prev-num == null or math.unit($num) == "%" or math.unit($prev-num) == "%" {
    } @else if not math.compatible($prev-num, $num) {
      @warn "Potentially invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} whose unit makes it incomparable to #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    } @else if $prev-num >= $num {
      @warn "Invalid value for #{$map-name}: This map must be in ascending order, but key '#{$key}' has value #{$num} which isn't greater than #{$prev-num}, the value of the previous key '#{$prev-key}' !";
    }
    $prev-key: $key;
    $prev-num: $num;
  }
}
@mixin _assert-starts-at-zero($map, $map-name: "$grid-breakpoints") {
  @if list.length($map) > 0 {
    $values: map.values($map);
    $first-value: list.nth($values, 1);
    @if $first-value != 0 {
      @warn "First breakpoint in #{$map-name} must start at 0, but starts at #{$first-value}.";
    }
  }
}
///////////////////////////////////////////////

$black:        #000000;
$white:        #FFFFFF;
$dark:         #0A1F38;
$dark-middle:  #1B2F46;
$dark-light:   #2F4056;
$gray:         #9DA5AF;
$green-dark:   #819400;
$green-middle: #97AB0D;
$green:        #A5BB0C;
$green-light:  #B1C909;
$red:          #FF7461;

$colors: (
        "white":        $white,
        "black":        $black,
        "dark-light":   $dark-light,
        "dark":         $dark,
        "dark-middle":  $dark-middle,
        "gray":         $gray,
        "green-light":  $green-light,
        "green":        $green,
        "green-middle": $green-middle,
        "green-dark":   $green-dark,
        "red":          $red,
);

// The contrast ratio to reach against white, to determine if color changes from "light" to "dark". Acceptable values for WCAG 2.2 are 3, 4.5 and 7.
// See https://www.w3.org/TR/WCAG/#contrast-minimum
$min-contrast-ratio:   4.5 !default;

// Customize the light and dark text colors for use in our color contrast function.
$color-contrast-dark:      $dark !default;
$color-contrast-light:     $white !default;

$primary:       $green-light !default;
$success:       $primary !default;
$danger:        $red !default;

$theme-colors: (
        "primary":    $primary,
        "danger":     $danger,
        "black":      $black,
        "dark-middle":  $dark-middle,
) !default;

$escaped-characters: (
                ("<", "%3c"),
                (">", "%3e"),
                ("#", "%23"),
                ("(", "%28"),
                (")", "%29"),
) !default;

// scss-docs-start spacer-variables-maps
$spacer: 1rem !default;
$spacers: (
        0: 0,
        1: $spacer * .25,
        2: $spacer * .5,
        3: $spacer,
        4: $spacer * 1.5,
        5: $spacer * 3,
) !default;
// scss-docs-end spacer-variables-maps

$spacings: (
        0: 0,
        1: 0.25rem,
        2: 0.5rem,
        2\.5: 0.625rem,
        3: 0.75rem,
        4: 1rem,
        5: 1.25rem,
        6: 1.5rem,
        7: 1.75rem,
        8: 2rem,
        10: 2.5rem,
        14: 3.5rem,
        15: 3.75rem,
        17: 4.25rem,
        20: 5rem,
        22\.5: 5.625rem,
        24: 6rem,
        px: 1px,
        auto: auto
);

$gaps: (
        0: 0,
        1: 0.25rem,
        2: 0.5rem,
        2\.5: 0.625rem,
        3: 0.75rem,
        4: 1rem,
        5: 1.25rem,
        6: 1.5rem,
        7: 1.75rem,
        8: 2rem,
        10: 2.5rem,
        px: 1px,
);

$sizes: (
        0: 0px,
        'px': 1px,
        0\.5: 0.125rem,  // 2px
        1: 0.25rem,     // 4px
        1\.5: 0.375rem,  // 6px
        2: 0.5rem,      // 8px
        2\.5: 0.625rem,  // 10px
        3: 0.75rem,     // 12px
        3\.5: 0.875rem,  // 14px
        4: 1rem,        // 16px
        5: 1.25rem,     // 20px
        6: 1.5rem,      // 24px
        7: 1.75rem,     // 28px
        8: 2rem,        // 32px
        9: 2.25rem,     // 36px
        10: 2.5rem,     // 40px
        'auto': auto,
        1\/2: 50%,       // 50% ширина
        1\/3: 33.333333%, // 33.33%
        2\/3: 66.666667%, // 66.66%
        1\/4: 25%,       // 25% ширина
        2\/4: 50%,       // 50% ширина (альтернатива 1/2)
        3\/4: 75%,       // 75% ширина
        1\/5: 20%,       // 20% ширина
        2\/5: 40%,       // 40% ширина
        3\/5: 60%,       // 60% ширина
        4\/5: 80%,       // 80% ширина
        1\/6: 16.666667%, // 16.66%
        2\/6: 33.333333%, // 33.33%
        3\/6: 50%,       // 50% (альтернатива 1/2)
        4\/6: 66.666667%, // 66.66% (альтернатива 2/3)
        5\/6: 83.333333%, // 83.33%
        1\/12: 8.333333%, // 8.33%
        2\/12: 16.666667%, // 16.66%
        3\/12: 25%,      // 25%
        4\/12: 33.333333%, // 33.33% (альтернатива 1/3)
        5\/12: 41.666667%, // 41.66%
        5\.5\/12: 45.833333%, // 45.83%
        6\/12: 50%,      // 50% (альтернатива 1/2)
        6\.5\/12: 54.166667%, // 54.16%
        7\/12: 58.333333%, // 58.33%
        8\/12: 66.666667%, // 66.66% (альтернатива 2/3)
        9\/12: 75%,      // 75%
        10\/12: 83.333333%, // 83.33%
        11\/12: 91.666667%, // 91.66%
        'full': 100%,     // Полная ширина
);

$body-text-align:             null !default;
$body-color:                  $white !default;
$body-bg:                     $dark !default;

$link-color:                  $primary !default;
$link-decoration:             none !default; // underline !default;
$link-shade-percentage:       20% !default;
$link-hover-color:            $white !default; // functions.shift-color($link-color, $link-shade-percentage) !default;
$link-hover-decoration:       null !default;

$paragraph-margin-bottom:     0 !default; // 1rem !default;

$grid-breakpoints: (
        xs: 0,
        sm: 576px,
        md: 768px,
        lg: 992px,
        xl: 1200px,
        xxl: 1400px,
        2xxl: 1600px
) !default;

@include _assert-ascending($grid-breakpoints, "$grid-breakpoints");
@include _assert-starts-at-zero($grid-breakpoints, "$grid-breakpoints");

$container-max-widths: (
        sm: 540px,
        md: 688px,
        lg: 872px,
        xl: 1040px,
        xxl: 1080px,
        2xxl: 1280px
) !default;

@include _assert-ascending($container-max-widths, "$container-max-widths");

$grid-columns:                12 !default;
$grid-gutter-width:           1.5rem !default;
$grid-row-columns:            6 !default;

$container-padding-x: $grid-gutter-width !default;
$container-paddings-x: (
        sm: 1.25rem,
        md: 5rem,
        lg: 7.5rem,
        xl: 10rem,
        xxl: 20rem,
        2xxl: 20rem
) !default;

$border-width:                1px !default;
$border-widths: (
        1: 1px,
        2: 2px,
        3: 3px,
        4: 4px,
        5: 5px
) !default;
$border-style:                solid !default;
$border-color:                none !default;
$border-color-translucent:    rgba($dark, .175) !default;
// scss-docs-end border-variables

// scss-docs-start border-radius-variables
$border-radius:               .375rem !default;
$border-radius-sm:            .25rem !default;
$border-radius-lg:            .5rem !default;
$border-radius-2lg:            .75rem !default;
$border-radius-xl:            1rem !default;
$border-radius-2xl:           1.5rem !default;
$border-radius-xxl:           2rem !default;
$border-radius-1\.5xxl:       2.25rem !default;
$border-radius-2xxl:          2.5rem !default;
$border-radius-pill:          50rem !default;
// scss-docs-end border-radius-variables

// scss-docs-start box-shadow-variables
$box-shadow:                  0 .5rem 1rem rgba($dark, .15) !default;
$box-shadow-sm:               0 .125rem .25rem rgba($dark, .075) !default;
$box-shadow-lg:               0 1rem 3rem rgba($dark, .175) !default;
$box-shadow-inset:            inset 0 1px 2px rgba($dark, .075) !default;
// scss-docs-end box-shadow-variables

$transition-base:             all .2s ease-in-out !default;

$component-active-color:      $white !default;
$component-active-bg:         $primary !default;

// scss-docs-start focus-ring-variables
$focus-ring-width:      .25rem !default;
$focus-ring-opacity:    .25 !default;
$focus-ring-color:      rgba($primary, $focus-ring-opacity) !default;
$focus-ring-blur:       0 !default;
$focus-ring-box-shadow: 0 0 $focus-ring-blur $focus-ring-width $focus-ring-color !default;
// scss-docs-end focus-ring-variables

$font-family-sans-serif:      "Montserrat" !default;
$font-family-base:            var(--font-sans-serif) !default;

$font-size-base:              1rem !default;
$font-size-sm:                $font-size-base * 1.125 !default;
$font-size-lg:                $font-size-base * 1.25 !default;

$font-weight-lighter:         lighter !default;
$font-weight-light:           300 !default;
$font-weight-normal:          400 !default;
$font-weight-medium:          500 !default;
$font-weight-semibold:        600 !default;
$font-weight-bold:            700 !default;
$font-weight-heavy:           800 !default;
$font-weight-black:           900 !default;
$font-weight-bolder:          bolder !default;

$font-weight-base:            $font-weight-normal !default;

$line-height-base:            1.5 !default;
$line-height-sm:              1.333333333333333 !default;
$line-height-md:              1.555555555555556 !default;
$line-height-lg:              1.6 !default;
$line-height-1:               1 !default;

$h1-font-size:                $font-size-base * 6.5 !default;  // $font-size-base * 2.5 !default;
$h2-font-size:                $font-size-base * 3 !default;    // $font-size-base * 2 !default;
$h3-font-size:                $font-size-base * 2 !default;    // $font-size-base * 1.75 !default;
$h4-font-size:                $font-size-base * 1.5 !default;  // $font-size-base * 1.5 !default;
// scss-docs-end font-variables

// scss-docs-start font-sizes
$font-sizes: (
        1: $h1-font-size,
        2: $h2-font-size,
        3: $h3-font-size,
        4: $h4-font-size,
) !default;
// scss-docs-end font-sizes

// scss-docs-start headings-variables
$headings-margin-bottom:      0 !default; // $spacer * .5 !default;
$headings-font-family:        null !default;
$headings-font-style:         null !default;
$headings-font-weight:        400 !default;
$headings-line-height:        1.5 !default;
$headings-color:              inherit !default;
// scss-docs-end headings-variables

$small-font-size:             1.125rem !default;
$small-font-size-sm:          0.875rem !default;

// Buttons + Forms
//
// Shared variables that are reassigned to `$input-` and `$btn-` specific variables.

// scss-docs-start input-btn-variables
$input-btn-padding-y:         .375rem !default; // .375rem !default;
$input-btn-padding-x:         .75rem !default; // .75rem !default;
$input-btn-font-family:       null !default;
$input-btn-font-size:         $font-size-lg !default;
$input-btn-line-height:       $line-height-lg !default;

$input-btn-focus-width:         $focus-ring-width !default;
$input-btn-focus-color-opacity: $focus-ring-opacity !default;
$input-btn-focus-color:         $focus-ring-color !default;
$input-btn-focus-blur:          $focus-ring-blur !default;
$input-btn-focus-box-shadow:    $focus-ring-box-shadow !default;

$input-btn-padding-y-sm:      .25rem !default;
$input-btn-padding-x-sm:      .5rem !default;
$input-btn-font-size-sm:      $font-size-sm !default;

$input-btn-padding-y-lg:      .5rem !default;
$input-btn-padding-x-lg:      1rem !default;
$input-btn-font-size-lg:      $font-size-lg !default;

$input-btn-border-width:      var(--border-width) !default;
// scss-docs-end input-btn-variables

// Buttons
//
// For each of Bootstrap's buttons, define text, background, and border color.

// scss-docs-start btn-variables
$btn-color:                   var(--body-color) !default;
$btn-padding-y:               $input-btn-padding-y * 2 !default; // $input-btn-padding-y !default;
$btn-padding-x:               $input-btn-padding-x * 2 !default; // $input-btn-padding-x !default;
$btn-font-family:             $input-btn-font-family !default;
$btn-font-size:               $input-btn-font-size !default;
$btn-line-height:             $input-btn-line-height !default;
$btn-white-space:             null !default; // Set to `nowrap` to prevent text wrapping

$btn-padding-y-sm:            $input-btn-padding-y-sm !default;
$btn-padding-x-sm:            $input-btn-padding-x-sm !default;
$btn-font-size-sm:            $input-btn-font-size-sm !default;

$btn-padding-y-lg:            $input-btn-padding-y-lg !default;
$btn-padding-x-lg:            $input-btn-padding-x-lg !default;
$btn-font-size-lg:            $input-btn-font-size-lg !default;

$btn-border-width:            calc($input-btn-border-width * 0) !default; // $input-btn-border-width !default;

$btn-font-weight:             $font-weight-medium !default; // $font-weight-normal !default;
$btn-box-shadow:              inset 0 1px 0 rgba($white, .15), 0 1px 1px rgba($dark, .075) !default;
$btn-focus-width:             $input-btn-focus-width !default;
$btn-focus-box-shadow:        $input-btn-focus-box-shadow !default;
$btn-disabled-opacity:        1 !default; // .65 !default
$btn-active-box-shadow:       inset 0 3px 5px rgba($dark, .125) !default;

$btn-link-color:              $btn-color !default;
$btn-link-hover-color:        var(--link-hover-color) !default;
$btn-link-disabled-color:     $gray !default;
$btn-link-focus-shadow-rgb:   btn-link-focus-shadow-rgb($link-color) !default;

// Allows for customizing button radius independently from global border radius
$btn-border-radius:           var(--border-radius) !default;
$btn-border-radius-sm:        var(--border-radius-sm) !default;
$btn-border-radius-lg:        var(--border-radius-lg) !default;

$btn-transition:              color .15s ease-in-out, background-color .15s ease-in-out, border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;

$btn-hover-bg-shade-amount:       15% !default;
$btn-hover-bg-tint-amount:        15% !default;
$btn-hover-border-shade-amount:   20% !default;
$btn-hover-border-tint-amount:    10% !default;
$btn-active-bg-shade-amount:      20% !default;
$btn-active-bg-tint-amount:       20% !default;
$btn-active-border-shade-amount:  25% !default;
$btn-active-border-tint-amount:   10% !default;
// scss-docs-end btn-variables

$form-feedback-valid-color:         $success !default;
$form-feedback-invalid-color:       $danger !default;

// scss-docs-start form-validation-colors
$form-valid-color:                  $form-feedback-valid-color !default;
$form-valid-border-color:           $form-feedback-valid-color !default;
$form-invalid-color:                $form-feedback-invalid-color !default;
$form-invalid-border-color:         $form-feedback-invalid-color !default;
// scss-docs-end form-validation-colors

// Modals
// scss-docs-start modal-variables
$modal-content-color:               null !default;
$modal-inner-padding:               .5rem !default; // $spacer !default;
$modal-content-bg:                  var(--dark-middle) !default;
$modal-content-border-radius:       2.5rem !default;
$modal-backdrop-bg:                 $dark !default;
$modal-backdrop-opacity:            .5 !default;
// scss-docs-end modal-variables

$btn-close-width:            1rem !default; // 1em !default;
$btn-close-height:           $btn-close-width !default;
$btn-close-padding-x:        1.25rem !default; // .25em !default;
$btn-close-padding-y:        $btn-close-padding-x !default;
$btn-close-color:            $white !default;
$btn-close-bg:               url("data:image/svg+xml,<svg width='18' height='18' viewBox='0 0 18 18' fill='#{$btn-close-color}' xmlns='http://www.w3.org/2000/svg'><path d='M1 1L17 17M17 1L1 17' stroke='#{$btn-close-color}' stroke-width='2' stroke-linecap='round'/></svg>") !default;
$btn-close-focus-shadow:     $focus-ring-box-shadow !default;
$btn-close-opacity:          1 !default; // .5 !default;
$btn-close-hover-opacity:    1 !default; // .75 !default;
$btn-close-focus-opacity:    1 !default; // 1 !default;
$btn-close-disabled-opacity: 1 !default; // .25 !default;
$btn-close-white-filter:     invert(1) grayscale(100%) brightness(200%) !default;

$btn-plus-bg:               url("data:image/svg+xml,<svg width='18' height='18' viewBox='0 0 18 18' fill='#{$btn-close-color}' xmlns='http://www.w3.org/2000/svg'><path d='M1 9H17M9 1L9 17' stroke='#{$btn-close-color}' stroke-width='2' stroke-linecap='round'/></svg>") !default;

$input-padding-y:                       1.375rem !default; // $input-btn-padding-y !default;
$input-padding-x:                       1.75rem !default;  // $input-btn-padding-x !default;
$input-padding-top:                     1.375rem !default; // $input-btn-padding-y !default;
$input-padding-bottom:                  1.375rem !default; // $input-btn-padding-y !default;
$input-padding-left:                    1.75rem !default;  //$input-btn-padding-x !default;
$input-padding-right:                   3.5rem !default; //$input-btn-padding-x !default;
$input-font-size:                       $font-size-sm !default;
$input-font-weight:                     $font-weight-base !default;
$input-line-height:                     $line-height-md !default;
$input-bg:                              var(--white) !default;
$input-color:                           var(--dark) !default;
$input-border-color:                    var(--white) !default;
$input-border-width:                    calc($input-btn-border-width * 2) !default;
$input-box-shadow:                      var(--box-shadow-inset) !default;
$input-border-radius:                   var(--border-radius-1\.5xxl) !default;
$input-focus-border-color:              var(--green-light) !default;
$input-placeholder-color:               var(--gray) !default;
$input-transition:                      border-color .15s ease-in-out, box-shadow .15s ease-in-out !default;

$input-height-border:                   calc(#{$input-border-width} * 2) !default;

$align-items: (
        "start": flex-start,
        "end": flex-end,
        "center": center,
        "baseline": baseline,
        "stretch": stretch
);

$align-texts: (
        "left": left,
        "center": center,
        "right": right,
        "justify": justify,
        "start": start,
        "end": end,
);

$justify-contents: (
        "normal": normal,
        "start": flex-start,
        "end": flex-end,
        "center": center,
        "between": space-between,
        "around": space-around,
        "evenly": space-evenly,
        "stretch": stretch,
);
$positions: (
        "static": static,
        "fixed": fixed,
        "absolute": absolute,
        "relative": relative,
        "sticky": sticky,
);

$flexDirections: (
        "row": row,
        "row-reverse": row-reverse,
        "col": column,
        "col-reverse": column-reverse,
);
/// Functions ///
@function to-rgb($value) {
  @return  math.round(color.channel($value, "red", $space: rgb)), math.round(color.channel($value, "green", $space: rgb)), math.round(color.channel($value, "blue", $space: rgb));
}

@function rgba-css-var($identifier, $target) {
  @if $identifier == "body" and $target == "bg" {
    @return rgba(var(--#{$identifier}-bg-rgb), var(--#{$target}-opacity));
  } @if $identifier == "body" and $target == "text" {
  @return rgba(var(--#{$identifier}-color-rgb), var(--#{$target}-opacity));
} @else {
  @return rgba(var(--#{$identifier}-rgb), var(--#{$target}-opacity));
}
}

@function btn-link-focus-shadow-rgb($color) {
  @return to-rgb(color.mix(color-contrast($color), $color, 15%, $method: rgb));
}

@function str-replace($string, $search, $replace: "") {
  $index: string.index($string, $search);

  @if $index {
    @return string.slice($string, 1, $index - 1) + $replace + str-replace(string.slice($string, $index + string.length($search)), $search, $replace);
  }

  @return $string;
}

@function escape-svg($string) {
  @if string.index($string, "data:image/svg+xml") {
    @each $char, $encoded in $escaped-characters {
      // Do not escape the url brackets
      @if string.index($string, "url(") == 1 {
        $string: url("#{str-replace(string.slice($string, 6, -3), $char, $encoded)}");
      } @else {
        $string: str-replace($string, $char, $encoded);
      }
    }
  }

  @return $string;
}

// Color contrast
// See https://github.com/twbs/bootstrap/pull/30168

// A list of pre-calculated numbers of pow(divide((divide($value, 255) + .055), 1.055), 2.4). (from 0 to 255)
// stylelint-disable-next-line scss/dollar-variable-default, scss/dollar-variable-pattern
$_luminance-list: .0008 .001 .0011 .0013 .0015 .0017 .002 .0022 .0025 .0027 .003 .0033 .0037 .004 .0044 .0048 .0052 .0056 .006 .0065 .007 .0075 .008 .0086 .0091 .0097 .0103 .011 .0116 .0123 .013 .0137 .0144 .0152 .016 .0168 .0176 .0185 .0194 .0203 .0212 .0222 .0232 .0242 .0252 .0262 .0273 .0284 .0296 .0307 .0319 .0331 .0343 .0356 .0369 .0382 .0395 .0409 .0423 .0437 .0452 .0467 .0482 .0497 .0513 .0529 .0545 .0561 .0578 .0595 .0612 .063 .0648 .0666 .0685 .0704 .0723 .0742 .0762 .0782 .0802 .0823 .0844 .0865 .0887 .0908 .0931 .0953 .0976 .0999 .1022 .1046 .107 .1095 .1119 .1144 .117 .1195 .1221 .1248 .1274 .1301 .1329 .1356 .1384 .1413 .1441 .147 .15 .1529 .1559 .159 .162 .1651 .1683 .1714 .1746 .1779 .1812 .1845 .1878 .1912 .1946 .1981 .2016 .2051 .2086 .2122 .2159 .2195 .2232 .227 .2307 .2346 .2384 .2423 .2462 .2502 .2542 .2582 .2623 .2664 .2705 .2747 .2789 .2831 .2874 .2918 .2961 .3005 .305 .3095 .314 .3185 .3231 .3278 .3325 .3372 .3419 .3467 .3515 .3564 .3613 .3663 .3712 .3763 .3813 .3864 .3916 .3968 .402 .4072 .4125 .4179 .4233 .4287 .4342 .4397 .4452 .4508 .4564 .4621 .4678 .4735 .4793 .4851 .491 .4969 .5029 .5089 .5149 .521 .5271 .5333 .5395 .5457 .552 .5583 .5647 .5711 .5776 .5841 .5906 .5972 .6038 .6105 .6172 .624 .6308 .6376 .6445 .6514 .6584 .6654 .6724 .6795 .6867 .6939 .7011 .7084 .7157 .7231 .7305 .7379 .7454 .7529 .7605 .7682 .7758 .7835 .7913 .7991 .807 .8148 .8228 .8308 .8388 .8469 .855 .8632 .8714 .8796 .8879 .8963 .9047 .9131 .9216 .9301 .9387 .9473 .956 .9647 .9734 .9823 .9911 1;

@function color-contrast($background, $color-contrast-dark: $color-contrast-dark, $color-contrast-light: $color-contrast-light, $min-contrast-ratio: $min-contrast-ratio) {
  $foregrounds: $color-contrast-light, $color-contrast-dark, $white, $dark;
  $max-ratio: 0;
  $max-ratio-color: null;

  @each $color in $foregrounds {
    $contrast-ratio: contrast-ratio($background, $color);
    @if $contrast-ratio > $min-contrast-ratio {
      @return $color;
    } @else if $contrast-ratio > $max-ratio {
      $max-ratio: $contrast-ratio;
      $max-ratio-color: $color;
    }
  }

  @warn "Found no color leading to #{$min-contrast-ratio}:1 contrast ratio against #{$background}...";

  @return $max-ratio-color;
}

@function contrast-ratio($background, $foreground: $color-contrast-light) {
  $l1: luminance($background);
  $l2: luminance(opaque($background, $foreground));

  @return if($l1 > $l2, divide($l1 + .05, $l2 + .05), divide($l2 + .05, $l1 + .05));
}

@function luminance($color) {
  $rgb: (
          "r": math.round(color.channel($color, "red", $space: rgb)),
          "g": math.round(color.channel($color, "green", $space: rgb)),
          "b": math.round(color.channel($color, "blue", $space: rgb))
  );

  @each $name, $value in $rgb {
    $value: if(divide($value, 255) < .04045, divide(divide($value, 255), 12.92), list.nth($_luminance-list, $value + 1));
    $rgb: map.merge($rgb, ($name: $value));
  }

  @return (map.get($rgb, "r") * .2126) + (map.get($rgb, "g") * .7152) + (map.get($rgb, "b") * .0722);
}

// Return opaque color
// opaque(#fff, rgba(0, 0, 0, .5)) => #808080
@function opaque($background, $foreground) {
  @return color.mix(rgba($foreground, 1), $background, color.opacity($foreground) * 100%);
}

@function shift-color($color, $weight) {
  @return if($weight > 0, shade-color($color, $weight), tint-color($color, -$weight));
}

@function tint-color($color, $weight) {
  @return color.mix(white, $color, $weight);
}

@function shade-color($color, $weight) {
  @return color.mix(black, $color, $weight);
}

@function add($value1, $value2, $return-calc: true) {
  @if $value1 == null {
    @return $value2;
  }

  @if $value2 == null {
    @return $value1;
  }

  @if meta.type-of($value1) == number and meta.type-of($value2) == number and math.compatible($value1, $value2) {
    @return $value1 + $value2;
  }

  @return if($return-calc == true, calc(#{$value1} + #{$value2}), $value1 + string.unquote(" + ") + $value2);
}

@function subtract($value1, $value2, $return-calc: true) {
  @if $value1 == null and $value2 == null {
    @return null;
  }

  @if $value1 == null {
    @return -$value2;
  }

  @if $value2 == null {
    @return $value1;
  }

  @if meta.type-of($value1) == number and meta.type-of($value2) == number and math.compatible($value1, $value2) {
    @return $value1 - $value2;
  }

  @if meta.type-of($value2) != number {
    $value2: string.unquote("(") + $value2 + string.unquote(")");
  }

  @return if($return-calc == true, calc(#{$value1} - #{$value2}), $value1 + string.unquote(" - ") + $value2);
}

@function divide($dividend, $divisor, $precision: 10) {
  $sign: if($dividend > 0 and $divisor > 0 or $dividend < 0 and $divisor < 0, 1, -1);
  $dividend: math.abs($dividend);
  $divisor: math.abs($divisor);
  @if $dividend == 0 {
    @return 0;
  }
  @if $divisor == 0 {
    @error "Cannot divide by 0";
  }
  $remainder: $dividend;
  $result: 0;
  $factor: 10;
  @while ($remainder > 0 and $precision >= 0) {
    $quotient: 0;
    @while ($remainder >= $divisor) {
      $remainder: $remainder - $divisor;
      $quotient: $quotient + 1;
    }
    $result: $result * 10 + $quotient;
    $factor: $factor * .1;
    $remainder: $remainder * 10;
    $precision: $precision - 1;
    @if ($precision < 0 and $remainder >= $divisor * 5) {
      $result: $result + 1;
    }
  }
  $result: $result * $factor * $sign;
  $dividend-unit: math.unit($dividend);
  $divisor-unit: math.unit($divisor);
  $unit-map: (
          "px": 1px,
          "rem": 1rem,
          "em": 1em,
          "%": 1%
  );
  @if ($dividend-unit != $divisor-unit and map.has-key($unit-map, $dividend-unit)) {
    $result: $result * map.get($unit-map, $dividend-unit);
  }
  @return $result;
}
